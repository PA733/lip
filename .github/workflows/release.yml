on:
  release:
    types: 
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GOOS:
          - darwin
          - linux
          - windows
        GOARCH:
          - amd64
          - arm64
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
         cache: true

      - name: Build
        run: |
          export GOOS=${{ matrix.GOOS }}
          export GOARCH=${{ matrix.GOARCH }}
          go build -ldflags "-s -w" -o bin/ github.com/lippkg/lip/cmd/lip

      - uses: actions/upload-artifact@v4
        with:
          name: lip-${{ matrix.GOOS }}-${{ matrix.GOARCH }}-${{ github.sha }}
          path: bin
  
  pack:
    needs: build
    runs-on: windows-latest
    strategy:
      matrix:
        OS:
          - windows
        ARCH:
          - amd64
          - arm64
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: lip-${{ matrix.OS }}-${{ matrix.ARCH }}-${{ github.sha }}

      - name: Set up NSIS
        run: |
          C:\msys64\usr\bin\wget.exe -q https://sourceforge.net/projects/nsis/files/NSIS%203/3.09/nsis-3.09.zip -O nsis.zip
          C:\msys64\usr\bin\wget.exe -q https://sourceforge.net/projects/nsis/files/NSIS%203/3.09/nsis-3.09-strlen_8192.zip -O nsis-strlen.zip
          C:\msys64\usr\bin\wget.exe -q https://nsis.sourceforge.io/mediawiki/images/7/7f/EnVar_plugin.zip -O EnVar_plugin.zip
          unzip -q -o nsis.zip
          mv nsis-3.09 nsis-portable
          unzip -q -o nsis-strlen.zip -d nsis-portable
          unzip -q -o EnVar_plugin.zip -d nsis-portable
 
      - name: Set up NSIS building folder
        run: |
          mkdir nsis
          cp ./scripts/make_installer.nsi ./nsis/
          cp ./lip.exe ./nsis/
          cp ./COPYING ./nsis/

      - name: Build setup program
        run: |
          .\nsis-portable\makensis /DLIP_VERSION=${{ github.ref_name }} /DLIP_OS=${{ matrix.OS }} /DLIP_ARCH=${{ matrix.ARCH }} ./nsis/make_installer.nsi

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: lip-${{ matrix.OS }}-${{ matrix.ARCH }}-${{ github.sha }}-setup
          path: nsis/lip-${{ matrix.OS }}-${{ matrix.ARCH }}-setup.exe

  update-release-notes:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate release stuff (tooth.json, CHANGELOG.md, etc.)
        run: |
          npm i -g keep-a-changelog
          python scripts/validate_release.py --tag ${{ github.event.release.tag_name }}

      - id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v2

      - uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.extract-release-notes.outputs.release_notes }}

  upload-to-release:
    needs: 
      - update-release-notes
      - pack
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GOOS: [darwin, linux, windows]
        GOARCH: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: lip-${{ matrix.GOOS }}-${{ matrix.GOARCH }}-${{ github.sha }}
          path: artifact
      
      - uses: actions/download-artifact@v4
        if: matrix.GOOS == 'windows'
        with:
          name: lip-${{ matrix.GOOS }}-${{ matrix.GOARCH }}-${{ github.sha }}-setup

      - name: Copy essential files
        run: |
          cp CHANGELOG.md COPYING README.md artifact/

      - name: Pack artifact (Windows)
        if: matrix.GOOS == 'windows'
        run: |
          zip -r ../lip-${{ matrix.GOOS }}-${{ matrix.GOARCH }}.zip *
        working-directory: artifact

      - name: Pack artifact (Others)
        if: matrix.GOOS != 'windows'
        run: |
          tar -czvf ../lip-${{ matrix.GOOS }}-${{ matrix.GOARCH }}.tar.gz *
        working-directory: artifact

      - name: Upload artifact to release (Windows)
        if: matrix.GOOS == 'windows'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            lip-${{ matrix.GOOS }}-${{ matrix.GOARCH }}.zip
            lip-${{ matrix.GOOS }}-${{ matrix.GOARCH }}-setup.exe

      - name: Upload artifact to release (Others)
        if: matrix.GOOS != 'windows'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            lip-${{ matrix.GOOS }}-${{ matrix.GOARCH }}.tar.gz
